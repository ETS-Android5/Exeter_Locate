


language: android
dist: trusty
jdk: oraclejdk8
sudo: false

env:
  global:
    - ANDROID_BUILD_TOOLS_VERSION=26.0.2
    - ANDROID_ABI=arm64-v8a
    - ANDROID_TAG=google_apis
    - ANDROID_API_LEVEL=26
    - EMULATOR_API_LEVEL=25
    - ADB_INSTALL_TIMEOUT=8 # minutes (2 minutes by default

android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    - tools
    - platform-tools
    - tools

    # The BuildTools version used by your project
    - build-tools-$ANDROID_BUILD_TOOLS_VERSION

    # The SDK version used to compile your project
    - android-$ANDROID_API_LEVEL
    - android-$EMULATOR_API_LEVEL

    # Support library
    # Latest artifacts in local repository
    - extra-android-m2repository

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - sys-img-$ANDROID_ABI-$ANDROID_TAG-$EMULATOR_API_LEVEL
    
    - extra-google-google_play_services
    - extra-google-m2repository
    #- extra-android-m2repository
    #- sys-img-armeabi-v7a-android-26
licenses:
  - 'android-sdk-preview-license-.+'
  - 'android-sdk-license-.+'
  - 'google-gdk-license-.+'
 
before_install:
    - touch $HOME/.android/repositories.cfg
#  - chmod +x gradlew
    - yes | sdkmanager "platforms;android-26"
    #- yes | sdkmanager "build-tools;28.0.3"
    
before_script:
  #- echo no | android create avd --force -n test -t android-22 --abi armeabi-v7a
  #- emulator -avd test -no-audio -no-window &
  #- android-wait-for-emulator
  #- adb shell input keyevent 82 &
  - android list targets
  - echo no | android create avd --force -n test -t "android-"$EMULATOR_API_LEVEL --abi $ANDROID_ABI --tag $ANDROID_TAG
  - emulator -list-avds
  - emulator -avd test -no-window &
  - android-wait-for-emulator
  - adb devices
  - adb shell input keyevent 82 &
  
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
  

cache:
  directories:
  - $HOME/.gradle/caches/
  - $HOME/.gradle/wrapper/
  - $HOME/.android/build-cache
    
script:
- cd WifiMapper
- ./gradlew clean test build
#- ./gradlew jacocoTestReport
#- ./gradlew createDebugCoverageReport
#- ./gradlew connectedCheck #instrucment tests
- ./gradlew jacocoTestReport

env: # note this is MJGibson version
    - CODECOV_TOKEN=063400ac-ab75-4700-bca0-16cf8b4523e5


after_success:
  - bash <(curl -s https://codecov.io/bash)